{"version":3,"sources":["Assets/images/sprite.svg","Form.js","TodoList.js","Todo.js","Sidebar.js","Main.js","index.js","FetchData.js","Modal.js"],"names":["module","exports","__webpack_require__","p","Form","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","react_default","a","createElement","className","type","onChange","e","target","value","onClick","onSubmitTodo","xlinkHref","concat","svgUrl","TodoList","data","done","idx","Todo","_ref","handleSubmitTodo","handleChange","formatMinute","setTarget","handleModalOpen","onOff","handleOnOffClick","itemsDOM","_loop2","i","length","push","TodoList_TodoList","key","_loop","Form_Form","time","Sidebar","id","style","display","htmlFor","timer","ReactDOM","render","_FetchData","items","setItems","preventDefault","newItems","toConsumableArray","Math","max","apply","map","item","FetchData","_FetchData2","countdown","setOnOff","_useState3","_useState4","secs","sec","parseInt","toString","clearTimeout","setTimeout","_Modal","openOrClose","setOpenOrClose","bookMark","setBookMark","_useState5","todo","_useState6","expand","setExpand","expandOrCollapse","objectSpread","defineProperty","itemsTODODOM","itemsDONEDOM","fill","color","transition","Modal","_Modal2","ModalDOM","document","getElementById"],"mappings":"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","file":"static/js/main.305dbc0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sprite.4ef730b4.svg\";","import React, {useState} from 'react';\n\nimport svgUrl from \"./Assets/images/sprite.svg\";\n\nexport const Form = (props) => {\n  const [text, setText] = useState('ADD A NEW MISSION...');\n\n  function handleChange(e){\n    setText(e.target.value);\n  }\n\n  function handleClick(e){\n    if(text === 'ADD A NEW MISSION...' || !text)\n      return;\n\n    setText('');\n    props.onSubmitTodo(e, text);\n  }\n  return(\n    <form className={props.className}>\n      <label className={props.className + '--text'}>\n        <input\n          type='text'\n          onChange={handleChange}\n          onClick={() => setText('')}\n          value={text}\n        />\n      </label>\n      <label \n        className={props.className + '--btn'}\n        onClick={handleClick}\n      >\n        <svg>\n          <use\n            xlinkHref={`${svgUrl}#icon-add`}\n          />:\n        </svg>\n      </label>\n    </form>\n  )\n}\n","import React from 'react';\n\nimport svgUrl from \"./Assets/images/sprite.svg\";\n\nexport const TodoList = (props) => {\n  return(\n    <div className=\"clock__container--list--item\">\n      {\n        (props.data.done) ?\n        <svg \n          // className=\"clock__container--list--item--circle\"\n          onClick={(e) => props.onChange(e, props.data.idx)}\n        >\n          <use xlinkHref={`${svgUrl}#icon-check`}/>\n        </svg>\n        :\n        <div \n          className=\"clock__container--list--item--circle\"\n          onClick={(e) => props.onChange(e, props.data.idx)}\n        >\n\n        </div>\n      }\n      <span\n        className={\n          (props.data.done) ? 'clock__container--list--item--text':''\n        }\n      >\n        {props.data.value}\n      </span>  \n      <svg\n        className=\"clock__container--list--item--btn\"\n        onClick={props.onClick}\n      >\n        <use xlinkHref={`${svgUrl}#icon-play`}/>\n      </svg>\n    </div>\n  )\n};\n","import React from 'react';\n\nimport {Form} from './Form';\nimport {TodoList} from './TodoList';\n\nimport './_Todo.scss';\n\nexport default function Todo({\n  data,\n  handleSubmitTodo,\n  handleChange,\n  formatMinute,\n  target,\n  setTarget,\n  onOff,\n  handleOnOffClick,\n  handleModalOpen\n}){\n\n  const itemsDOM = [];\n  for (let i = 0; i < data.length; i++){\n    if (itemsDOM.length === 4)\n      break;\n    else if(data[i] === target || data[i].done)\n      continue;\n    else\n      itemsDOM.push(\n        <TodoList\n          key={data[i].idx}\n          data={data[i]}\n          onChange={handleChange}\n          onClick={() => setTarget(data[i])}\n        />\n      );\n  }\n\n  return(\n    <div className=\"clock__container\">\n      <Form\n        className=\"clock__container--inputBar\"\n        onSubmitTodo={handleSubmitTodo}\n      />\n      <div className=\"clock__container--time\">\n        <div className=\"clock__container--time--title\">\n          <div className=\"clock__container--time--title--circle\"></div>\n          <div className=\"clock__container--time--title--text\">\n            {target.value}\n          </div>\n        </div>\n        <div className=\"clock__container--time--content\">\n          {formatMinute(target.time)}\n        </div>\n      </div>\n      <div className=\"clock__container--list\">\n        {itemsDOM}\n        <button\n          className=\"clock__container--list--btn\"\n          onClick={() => handleModalOpen(1)}\n        >\n          MORE\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport svgUrl from \"./Assets/images/sprite.svg\";\nimport './_Sidebar.scss';\n\nexport default function Sidebar({\n  data,\n  handleChange,\n  handleSubmitTodo,\n  formatMinute,\n  target,\n  setTarget,\n  onOff,\n  handleOnOffClick,\n  handleModalOpen\n}){\n  return (\n    <div className=\"clock__sidebar\">\n      <input\n        type='checkbox'\n        id='clock__onoff'\n        style={{display: 'none'}}\n      / >\n      <svg\n        className=\"clock__sidebar--button-1\"\n        onClick={() => handleModalOpen(1)}\n      >\n        <use xlinkHref={`${svgUrl}#icon-sidebar`} />:\n      </svg>\n      <svg\n        className=\"clock__sidebar--button-2\"\n        onClick={() => handleModalOpen(2)}\n      >\n        <use xlinkHref={`${svgUrl}#icon-assessment`} />:\n      </svg>\n      <svg\n        className=\"clock__sidebar--button-3\"\n        onClick={() => handleModalOpen(3)}\n      >\n        <use xlinkHref={`${svgUrl}#icon-musicplay`} />:\n      </svg>\n      <div className=\"clock__sidebar--picture\">\n        <label htmlFor=\"clock__onoff\">\n          <svg\n            onClick={handleOnOffClick}\n            >\n              {\n                (onOff)?\n                <use xlinkHref={`${svgUrl}#icon-pause`}/>\n                :\n                <use xlinkHref={`${svgUrl}#icon-play`}/>\n              }\n            </svg>\n        </label>\n      </div>\n      <div className=\"clock__sidebar--text\">\n        PROMODORO\n      </div>\n    </div>\n  )\n}\n","import React, {useState} from 'react';\n\nimport FetchData from './FetchData';\nimport Todo from './Todo';\nimport Sidebar from './Sidebar';\nimport Modal from './Modal';\n\nimport './_Main.scss';\n\nlet timer ='';\n\nexport default function Main(){\n    const [items, handleSubmitTodo, handleChange, countdown] = FetchData();\n    const [onOff, setOnOff] = useState(false);\n    const [target, setTarget] = useState(items[0]);\n\n    clearTimeout(timer);\n    if(onOff){\n        timer = setTimeout(() => {\n        countdown(target)\n        }, 1000);\n    }\n\n    function formatMinute(secs){\n        const min = parseInt(secs / 60);\n        const sec = secs % 60 || '00';\n        return min.toString() + ':' + sec.toString();\n    }\n\n    function handleOnOffClick(){\n        setOnOff(!onOff);\n    }\n\n    const [ModalDOM, handleModalOpen] = Modal({\n      data: items,\n      handleSubmitTodo: handleSubmitTodo,\n      handleChange: handleChange,\n      formatMinute: formatMinute,\n      target: target,\n      setTarget: setTarget,\n      onOff: onOff,\n      handleOnOffClick: handleOnOffClick\n    });\n    return (\n        <div className=\"clock\">\n            <Todo\n                data={items}\n                handleSubmitTodo={handleSubmitTodo}\n                handleChange={handleChange}\n                formatMinute={formatMinute}\n                onOff={onOff}\n                target={target}\n                setTarget={setTarget}\n                handleOnOffClick={handleOnOffClick}\n                handleModalOpen={handleModalOpen}\n            />\n            <Sidebar\n                data={items}\n                handleSubmitTodo={handleSubmitTodo}\n                handleChange={handleChange}\n                formatMinute={formatMinute}\n                target={target}\n                setTarget={setTarget}\n                onOff={onOff}\n                handleOnOffClick={handleOnOffClick}\n                handleModalOpen={handleModalOpen}\n            />\n            {ModalDOM}\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Main from './Main';\n\nimport \"./_base.scss\";\n\nReactDOM.render(\n  <Main />, document.getElementById('root')\n);\n","import {useState} from 'react';\n\nexport default function FetchData(){\n  const [items, setItems] = useState([\n      {idx: 0, value: 'THE FIRST THING TO DO TODAY', done: false, 'time': 1500},\n      {idx: 1, value: 'THE SECOND THING TO DO TODAY', done: false, 'time': 1500},\n      {idx: 2, value: 'THE THIRD THING TO DO TODAY', done: false, 'time': 1500},\n      {idx: 3, value: 'THE FORTH THING TO DO TODAY', done: false, 'time': 1500}\n  ]);\n  function handleSubmitTodo(e, value){\n      e.preventDefault();\n      const newItems = [...items, {\n        idx: Math.max(...items.map(item => item.idx)) + 1,\n        value: value,\n        time: 1500,\n        done: false\n      }];\n      setItems(newItems);\n  }\n\n  function handleChange(e, idx){\n      const newItems = [...items];\n      newItems[idx].done = !newItems[idx].done;\n      setItems(newItems);\n  }\n\n  function countdown(value){\n      value.time = value.time -1;\n      setItems([\n        ...items\n      ]);\n  }\n\n  return [items, handleSubmitTodo, handleChange, countdown];\n}\n","import React, {useState} from 'react';\n\nimport {Form} from './Form';\nimport {TodoList} from './TodoList';\n\nimport svgUrl from './Assets/images/sprite.svg';\n\nimport './_Modal.scss';\n\nexport default function Modal({\n    data,\n    handleChange,\n    handleSubmitTodo,\n    target,\n    formatMinute,\n    setTarget,\n    onOff,\n    handleOnOffClick\n}){\nconst [openOrClose, setOpenOrClose] = useState(false);\nconst [bookMark, setBookMark] = useState('');\nconst [expand, setExpand] = useState({\n  'todo': true,\n  'done': true\n});\nfunction handleModalOpen(value){\n    setOpenOrClose(!openOrClose);\n    setBookMark(value);\n}\n\nfunction expandOrCollapse(type){\n  setExpand({\n    ...expand,\n    [type]: !expand[type]\n  })\n}\n\nconst itemsTODODOM = [];\nconst itemsDONEDOM = [];\n  for (let i = 0; i < data.length; i++){\n    if(data[i].done)\n        itemsDONEDOM.push(\n          <TodoList\n            key={data[i].idx}\n            data={data[i]}\n            onChange={handleChange}\n            onClick={() => setTarget(data[i])}\n          />\n        )\n    else\n        itemsTODODOM.push(\n          <TodoList\n              key={data[i].idx}\n              data={data[i]}\n              onChange={handleChange}\n              onClick={() => setTarget(data[i])}\n          />\n        );\n  }\n\n    const ModalDOM =\n        <div\n            className=\"Modal\"\n            style={{display: (openOrClose) ? 'block' : 'none'}}\n        >\n            <div className=\"Modal__sidebar\">\n                <div className=\"Modal__sidebar__btn\">\n                    <div\n                      className=\"Modal__sidebar__btn--1\"\n                      onClick={() => setBookMark(1)}\n                    >\n                        <svg\n                          style={{fill: bookMark === 1 ? '#FF4384' : ''}}\n                        >\n                            <use xlinkHref={`${svgUrl}#icon-sidebar`} />:\n                        </svg>\n                        <div\n                          style={{color: bookMark === 1 ? '#FF4384' : ''}}\n                        >TO-DO LIST</div>\n                    </div>\n                    <div\n                      className=\"Modal__sidebar__btn--2\"\n                      onClick={() => setBookMark(2)}\n                    >\n                        <svg\n                          style={{fill: bookMark === 2 ? '#FF4384' : ''}}\n                        >\n                            <use xlinkHref={`${svgUrl}#icon-assessment`} />:\n                        </svg>\n                        <div\n                          style={{color: bookMark === 2 ? '#FF4384' : ''}}\n                        >ANALYTICS</div>\n                    </div>\n                    <div\n                      className=\"Modal__sidebar__btn--3\"\n                      onClick={() => setBookMark(3)}\n                    >\n                        <svg\n                          style={{fill: bookMark === 3 ? '#FF4384' : ''}}\n                        >\n                            <use xlinkHref={`${svgUrl}#icon-musicplay`} />:\n                        </svg>\n                        <div\n                          style={{color: bookMark === 3 ? '#FF4384' : ''}}\n                        >RINGTONES</div>\n                    </div>\n                </div>\n                <div\n                    className=\"Modal__sidebar__clock\"\n                    onClick={handleOnOffClick}\n                >\n                    <svg\n                        className=\"Modal__sidebar__clock--btn\"\n                        // onClick={handleOnOffClick}\n                    >\n                        {\n                        (onOff)?\n                            <use xlinkHref={`${svgUrl}#icon-pause`}/>\n                            :\n                            <use xlinkHref={`${svgUrl}#icon-play`}/>\n                        }\n                    </svg>\n                    <div className=\"Modal__sidebar__clock--text\">\n                        <div className=\"Modal__sidebar__clock--text--time\">\n                            {formatMinute(target.time)}\n                        </div>\n                        <div className=\"Modal__sidebar__clock--text--thing\">\n                            {target.value}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"Modal__tododetail\">\n                <Form\n                     className=\"Modal__tododetail__form\"\n                     onSubmitTodo={handleSubmitTodo}\n                />\n                <div className=\"Modal__tododetail__todo\">\n                    <div\n                      className=\"Modal__tododetail__todo__header\"\n                      onClick={() => expandOrCollapse('todo')}\n                    >\n                      <svg >\n                          {\n                            expand['todo'] ?\n                            <use xlinkHref={`${svgUrl}#icon-down`} />:\n                            <use xlinkHref={`${svgUrl}#icon-up`} />\n                          }\n\n                      </svg>\n                        TODO\n                    </div>\n                    <div\n                      className=\"Modal__tododetail__todo__detail\"\n                      style={{\n                        display: expand['todo'] ? 'block' : 'none',\n                        transition: '.5s'\n                      }}\n                    >\n                        {itemsTODODOM}\n                    </div>\n                </div>\n                <div className=\"Modal__tododetail__done\">\n                    <div\n                      className=\"Modal__tododetail__done__header\"\n                      onClick={() => expandOrCollapse('done')}\n                    >\n                      <svg >\n                          {\n                            expand['done'] ?\n                            <use xlinkHref={`${svgUrl}#icon-down`} />:\n                            <use xlinkHref={`${svgUrl}#icon-up`} />\n                          }\n\n                      </svg>\n                        DONE\n                    </div>\n                    <div\n                      className=\"Modal__tododetail__done__detail\"\n                      style={{display: expand['done'] ? 'block' : 'none'}}\n                    >\n                        {itemsDONEDOM}\n                    </div>\n                </div>\n            </div>\n            <svg\n                className=\"Modal__close\"\n                onClick={handleModalOpen}\n            >\n                <use xlinkHref={`${svgUrl}#icon-close`} />\n            </svg>\n        </div>;\n\n    return [ModalDOM, handleModalOpen];\n}\n"],"sourceRoot":""}